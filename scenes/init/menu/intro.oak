std := import('std')
Once := std.once

str := import('str')
json := import('json')
rng := import('random')


{
  FirstInput?: FirstInput?
  IS_IFRAME: IS_IFRAME
  CHROMEOS: CHROMEOS

  SUPERCOMMONCOLOUR: SUPERCOMMONCOLOUR
  createBeatHandler: createBeatHandler

  getFInput: getFInput
  enterNextH: enterNextH

  playMenuEnter: playMenuEnter
  MEnterTrigger: MEnterTrigger

  currentAudio: currentAudio

  playMenuEnter: playMenuEnter
  stopConfirm: stopConfirm
  MEnterTrigger: MEnterTrigger

  playMenuMusic: playMenuMusic
  stopMenuMusic: stopMenuMusic

  playTickSound: playTickSound
  stopTickSound: stopTickSound

  createPlayer: createPlayer
  createGhosty: createGhosty

  createMenuStructure: createMenuStructure
  ScrollableMenu: ScrollableMenu
  ScrollableList: ScrollableList
} := import('../core')

{
  Transition: Transition
  PixelTransition: PixelTransition
} := import('../../blocks/Transition')


PRELOAD := import('./preload')
{
  gwibble: gwibble
  beanSpr: beanSpr
  ghostySpr: ghostySpr
  menu_logoSpr: menu_logoSpr
  loadBarSpr: loadBarSpr
  loading_tempSpr: loading_tempSpr
  kaboomSpr: kaboomSpr
  kaboom_bgSpr: kaboom_bgSpr
  cowingSpr: cowingSpr
  introTexts: introTexts

  menuMusic: menuMusic
} := PRELOAD


{ newCut: newCut } := import('../../ware/cutscene')
{ shakey: shakey } := import('../../blocks/shakey')


with scene('intro') fn {

  playMenuMusic()

  setBackground(BLACK)

  firstTrack := newCut()

  // ---

  enterNextH('menuScreen')
  enterNextH('intro', 'escape')

  // ---

  txt := with do() '
    add([
      text(
        "KaboomFunkin\\\'",
        {
          size: 42,
          width: width() * 0.75,
          font: "gwibble",
          align: "center"
        }
      ),
      pos(center()),
      anchor("center")
    ])
  '

  cowingLogo := with add() [
    with sprite() 'cowing' |> s()
    pos(center())
    with anchor() 'center' |> s()
    scale(0.1)
  ]

  // @semi-components
  with shakey() txt
  with shakey() cowingLogo

  // ---

  cutArr := [

    // Initally Hidden
    [0, [txt, 0]]
    [0, [cowingLogo, 0]]

    [2, [txt, 1]]
    [3.2, [txt, 0]]

    [2, fn {
      txt.text <- 'Made by Spectcow\n'
    }]
    [0, [txt, 1]]

    [3, fn {
      txt.text <- txt.text + 'He\'s so cool !'
    }]

    [3.2, [txt, 0]]

    // @ Intro Random Text
    [2, fn {
      choice := introTexts |> str.split('\n') |> rng.choice()
      txt.text <- ''

      choice |> str.split('--') |> with std.each() fn(ii, ic) {
        with wait(1.2 * ic) fn() txt.text <- txt.text + ii << '\n'
      }
    }]
    [0, [txt, 1]]

    [4, [txt, 0]]

    [2, fn() Transition(WHITE).fadeIn(2)]
    // 2 + fadeTime
    [3 + 2, fn() go('menuScreen')]
  ]

  with firstTrack.Cutscene(cutArr) fn(ii) if type(ii) {
    :function -> ii()
    _ -> {
      (ii.0).opacity <- ii.1 |> std.default((ii.0).opacity)
    }
  }
}