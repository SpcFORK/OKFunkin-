std := import('std')
Once := std.once

str := import('str')
json := import('json')
rng := import('random')


{
  FirstInput?: FirstInput?
  IS_IFRAME: IS_IFRAME
  CHROMEOS: CHROMEOS

  SUPERCOMMONCOLOUR: SUPERCOMMONCOLOUR
  createBeatHandler: createBeatHandler

  getFInput: getFInput
  enterNextH: enterNextH

  playMenuEnter: playMenuEnter
  MEnterTrigger: MEnterTrigger

  currentAudio: currentAudio

  playMenuEnter: playMenuEnter
  stopConfirm: stopConfirm
  MEnterTrigger: MEnterTrigger

  playMenuMusic: playMenuMusic
  stopMenuMusic: stopMenuMusic

  playTickSound: playTickSound
  stopTickSound: stopTickSound

  createPlayer: createPlayer
  createGhosty: createGhosty

  createMenuStructure: createMenuStructure
  ScrollableMenu: ScrollableMenu
  ScrollableList: ScrollableList
} := import('../core')


{
  Transition: Transition
  PixelTransition: PixelTransition
} := import('../../blocks/Transition')


{ newCut: newCut } := import('../../ware/cutscene')
{ shakey: shakey } := import('../../blocks/shakey')


// ---
// @Storymode
//   Expect to come here a lot.

StoryWeeks := {
  'Week 1': fn() console.log('week')
  'Week 2': fn() console.log('week')
  'Week 3': fn() console.log('week')
  'Week 4': fn() console.log('week')
  'Week 5': fn() console.log('week')
  'Week 6': fn() console.log('week')
  'Week 7': fn() console.log('week')
}

with scene('storyMode') fn {

  enterNextH('gameSelect', 'escape')

  // ---

  tabs := createMenuStructure()

  fn setText(topl, topr, infot) {
    fn is(rule, cb) if rule != ? -> cb()

    with is(topl) fn() tabs.top.topLeftText.text <- topl
    with is(topr) fn() tabs.top.topRightText.text <- topr
    with is(infot) fn() tabs.bottom.infoText.text <- infot
  }

  // Yellowish BG
  with add() [
    rect(width(), height())
    color(
      SUPERCOMMONCOLOUR.0
      SUPERCOMMONCOLOUR.1
      SUPERCOMMONCOLOUR.2
    )
    z(-3)
  ]

  setText(
    'Select Week'
    'USE ARROW KEYS TO MOVE TABS'
    '(Press ENTER to select Week)'
  )

  trs := Transition(BLACK)
  trs.fadeOut(0.2)

  // ---

  WeekNames := []
  // 8 Being 7 weeks then next stop
  with std.loop(8) fn(ii) {
    WeekNames << ('Week ' + s(ii))
  }

  fn Week1Load {
    // Do Cutscene
    // We also do loading during them because thats cool downtime!

    cutsc := newCut()
    [
      // In
      [0.05, fn() console.log(1)]
      [0.05, fn() console.log(2)]
      [0.05, fn() console.log(3)]
      [0.05, leave!]
    ] |> with cutsc.Cutscene() fn() {}

    // Then leave
    fn leave!() go('loading', {
      cb: fn {
        Promise |> with new() fn(r) r()
      }
    })
  }

  Weeks := {
    WeekNames.1: Week1Load
  }

  WeekTexts := {
    WeekNames.1: [
      'Daddy Dearest'
      'A unique storyline, Kaboom themed'
    ]

    WeekNames.2: [
      'The Spookies'
      'Your old friend, Freeplay.'
    ]

    WeekNames.3: [
      'Pico'
      'Change how your game works'
    ]

    WeekNames.4: [
      'Mommy Mearest'
      'The credits, thank the ones in it!'
    ]

    WeekNames.5: [
      'Mommy Mearest'
      'The credits, thank the ones in it!'
    ]

    WeekNames.6: [
      'Christmas'
      'Quit the game, boooring.'
    ]

    WeekNames.7: [
      'Senpai'
      'Quit the game, boooring.'
    ]

    WeekNames.8: [
      'Tankman'
      'Quit the game, boooring.'
    ]
  }

  sm := ScrollableMenu(Weeks)

  // ---

  fn changeTexts {
    weekbarText := WeekTexts.(sm.key()) |> std.default([?,?,?])
    setText(?, weekbarText...)
  }

  fn moveLeft {
    with sm.moveForward() fn() playTickSound()
    changeTexts()
  }

  fn moveRight {
    with sm.moveBack() fn() playTickSound()
    changeTexts()
  }

  // ---

  s('left') |> with onKeyPressRepeat() moveLeft
  s('a') |> with onKeyPressRepeat() moveLeft

  s('right') |> with onKeyPressRepeat() moveRight
  s('d') |> with onKeyPressRepeat() moveRight

  // ---

  with sm.EListen() with std.once() fn {
    weekCall := sm.getItem()

    Transition(BLACK).fadeIn(0.2)
    with wait(0.2) weekCall
  }
}