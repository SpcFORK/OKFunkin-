std := import('std')
Once := std.once

str := import('str')
json := import('json')
rng := import('random')


{
  FirstInput?: FirstInput?
  IS_IFRAME: IS_IFRAME
  CHROMEOS: CHROMEOS

  SUPERCOMMONCOLOUR: SUPERCOMMONCOLOUR
  createBeatHandler: createBeatHandler

  getFInput: getFInput
  enterNextH: enterNextH

  playMenuEnter: playMenuEnter
  MEnterTrigger: MEnterTrigger

  currentAudio: currentAudio

  playMenuEnter: playMenuEnter
  stopConfirm: stopConfirm
  MEnterTrigger: MEnterTrigger

  playMenuMusic: playMenuMusic
  stopMenuMusic: stopMenuMusic

  playTickSound: playTickSound
  stopTickSound: stopTickSound

  createPlayer: createPlayer
  createGhosty: createGhosty

  createMenuStructure: createMenuStructure
  ScrollableMenu: ScrollableMenu
  ScrollableList: ScrollableList
} := import('../core')


{
  Transition: Transition
  PixelTransition: PixelTransition
} := import('../../blocks/Transition')


{ newCut: newCut } := import('../../ware/cutscene')
{ shakey: shakey } := import('../../blocks/shakey')


with scene('gameSelect') fn {

  enterNextH('menuScreen', 'escape')

  // ---

  tabs := createMenuStructure()

  fn setText(topl, topr, infot) {
    fn is(rule, cb) if rule != ? -> cb()

    with is(topl) fn() tabs.top.topLeftText.text <- topl
    with is(topr) fn() tabs.top.topRightText.text <- topr
    with is(infot) fn() tabs.bottom.infoText.text <- infot
  }

  // Yellowish BG
  with add() [
    rect(width(), height())
    color(
      SUPERCOMMONCOLOUR.0
      SUPERCOMMONCOLOUR.1
      SUPERCOMMONCOLOUR.2
    )
    z(-3)
  ]

  setText(
    'Select Tab'
    'USE ARROW KEYS TO MOVE TABS'
    '(Press ENTER to select tab)'
  )

  // ---

  bf := createPlayer()
  gf := createGhosty()

  with bf.use() pos(100, center().y - 75)
  with gf.use() pos(center().x, center().y - 75)

  // ---

  weeks := {
    'Story Mode': fn() go('storyMode')
    'Freeplay': fn() go('freeplay')
    'Options': fn() go('options')
    'Credits': fn() go('credits')
    'Quit': fn() console.log('quit')
  }

  weekKeys := keys(weeks)

  sm := ScrollableMenu(weeks)

  // ---

  fn changeTexts if sm.key() {
    weekKeys.0 -> setText(
      ?
      'Play as Bean!'
      'A unique storyline, Kaboom themed'
    )

    weekKeys.1 -> setText(
      ?
      'Play any SONG!'
      'Your old friend, Freeplay.'
    )

    weekKeys.2 -> setText(
      ?
      'Play with your settings'
      'Change how your game works'
    )

    weekKeys.3 -> setText(
      ?
      'See who did what'
      'The credits, thank the ones in it!'
    )

    weekKeys.4 -> setText(
      ?
      'Quit'
      'Quit the game, boooring.'
    )
  }

  fn moveLeft {
    with sm.moveForward() fn() playTickSound()
    changeTexts()
  }

  fn moveRight {
    with sm.moveBack() fn() playTickSound()
    changeTexts()
  }

  // ---

  s('left') |> with onKeyPressRepeat() moveLeft
  s('a') |> with onKeyPressRepeat() moveLeft

  s('right') |> with onKeyPressRepeat() moveRight
  s('d') |> with onKeyPressRepeat() moveRight

  // ---

  with sm.EListen() with std.once() fn {
    weekCall := sm.getItem()

    Transition(BLACK).fadeIn(0.2)
    with wait(0.2) weekCall
  }

  Transition(BLACK).fadeOut(0.2)

}