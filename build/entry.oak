// oak build
__Oak_Modules := {}
__Oak_Import_Aliases := ?
fn __oak_modularize(name, module) __Oak_Modules.(name) := module
fn __oak_module_import(name) if ___runtime_lib?(name) {
	true -> import(name)
	_ -> if type(module := __Oak_Modules.(name)) {
		:null -> if module := __Oak_Modules.(__Oak_Import_Aliases.(name)) {
			? -> import(name)
			_ -> {
				mod := module()
				__Oak_Modules.(name) := mod
				mod
			}
		}
		:function -> {
			m := module()
			__Oak_Modules.(name) := m
			m
		}
		_ -> module
	}
}
(__oak_modularize('scenes/blocks/Transition.oak',fn()(std:=__oak_module_import('std'),fn Transition(color_,tw)(color_:=std.default(color_,BLACK),tw:=std.default(tw,easings.easeOutSine),self:={},fn createFG()(add([rect(width(),height()),color(color_),opacity(1)])),self.tr<-createFG(),fn makeTransition(speed,call,setOpacity)(self.tr.use(opacity(setOpacity)),self.tr.use(call(speed))),self.fadeIn:=fn(speed,color)(if color !=?{true->self.tr.use(color)},makeTransition(speed,fadeIn,0)),self.fadeOut:=fn(speed,color)(if color !=?{true->self.tr.use(color)},makeTransition(speed,fn(sp)self.tr.fadeOut(sp),1)),self),fn PixelTransition(color_)(color_:=std.default(color_,BLACK),self:={},fn createFG()(add([rect(width(),height()),color(0,0,0),opacity(1)])),self.tr<-createFG(),fn makeTransition(speed,color,amm)(time:=0,std.loop(fn(count,breaker)if true{self.tr.opacity<1->wait(time,fn()(time<-time+speed,self.tr.opacity<-self.tr.opacity+amm)),_->breaker()})),fn unTransition(speed,color,amm)(time:=0,std.loop(fn(count,breaker)if true{self.tr.opacity>0->wait(time,fn()(time<-time+speed,self.tr.opacity<-self.tr.opacity-amm)),_->breaker()})),self.fadeIn:=fn(speed,amm,color)(if color !=?{true->self.tr.use(color)},makeTransition(speed,color,amm)),self.fadeOut:=fn(speed,amm,color)(if color !=?{true->self.tr.use(color)},unTransition(speed,color,amm)),self),{PixelTransition:PixelTransition,Transition:Transition,std:std})),__oak_modularize('scenes/blocks/shakey.oak',fn()(fn shakey(obj)(ogp:=obj.pos,STOP:=false,fn draw_()if !STOP{true->(obj.pos<-ogp.clone().add(rand(),rand()))},returns:=obj.onUpdate(draw_),obj.shakeyMod<-{set:fn set(v)STOP<-v,toggle:fn toggle()set(!STOP),on:fn on()set(true),off:fn off()set(false),returns:returns,cancel:returns.cancel,remove:fn()(off(),cancel())},returns),{shakey:shakey})),__oak_modularize('scenes/init/boot.oak',fn()(std:=__oak_module_import('std'),rnd:=__oak_module_import('random'),dt:=__oak_module_import('datetime'),gwibble:=loadFont(s('gwibble'),s('/fonts/gwibble/font.ttf')),{shakey:shakey}:=__oak_module_import('scenes/blocks/shakey.oak'),scene('init',fn()(names:=['SpectCOW','SpcFORK','SpectMEOW','Midialive','Seedw','Spcv','Comercialcheck','Bull ahh mf'],name:=rnd.choice(names),cn_title_text:=add([text(s(name),{font:s('gwibble'),size:48,width:300,align:s('center')}),color(BLACK),pos(center()),anchor(s('center'))]),fn SET(v)cn_title_text.opacity<-v,fn SHOW()SET(1),fn HIDE()SET(0),fn TEXT(v)cn_title_text.text<-v,shakey(cn_title_text),track:=0,fn _ta(amm)track<-track+amm,wait(_ta(3),fn()(HIDE(),TEXT(2024))),wait(_ta(3),SHOW),wait(_ta(3),HIDE),wait(_ta(3/2),fn()go('game')))),{dt:dt,gwibble:gwibble,rnd:rnd,shakey:shakey,std:std})),__oak_modularize('scenes/init/main.oak',fn()(std:=__oak_module_import('std'),str:=__oak_module_import('str'),json:=__oak_module_import('json'),rng:=__oak_module_import('random'),_b:=__oak_module_import('scenes/init/boot.oak'),FirstInput?:=window.FirstInput?:=false,IS_IFRAME:=(window.location !=window.parent.location),CHROMEOS:=navigator.userAgent.includes('CrOS'),fn getFInput()(holder:=onClick(fn()(FirstInput?:=true,holder.cancel()))),fi_:=getFInput(),GLOBAL_LOADED_FILES:=window.GLOBAL_LOADED_FILES:={txts:'',RIGHTTOPTEXTCHOICES:{},WEEKLIST:{},WEEKSONGS:{},STORYW:{}},{Transition:Transition,PixelTransition:PixelTransition}:=__oak_module_import('scenes/blocks/Transition.oak'),{newCut:newCut}:=__oak_module_import('scenes/ware/cutscene.oak'),{shakey:shakey}:=__oak_module_import('scenes/blocks/shakey.oak'),gwibble:=?,beanSpr:=?,ghostySpr:=?,menu_logoSpr:=?,loadBarSpr:=?,loading_tempSpr:=?,kaboomSpr:=?,kaboom_bgSpr:=?,cowingSpr:=?,introTexts:=?,menuMusic:=?,fn playMenuMusic()(mm<-play('freakyMenu',{volume:0.5,loop:true})),fn createPlayer()(add([sprite(s('bean'),{anim:s('idle')}),pos(center()),area(),body(),anchor(s('center')),{score:0,misses:0,combo:0,combo_max:0,health:100}])),fn createGhosty()(gh_:=add([sprite(s('ghosty'),{anim:s('idle'),animSpeed:0.5}),anchor(s('center'))])),fn createBeatHandler()(lastBeatTime:=0,({activateBeat:fn(bpm)(beatInterval:=60000/bpm,currentTime:=time(),if currentTime-lastBeatTime>beatInterval/1000{true->(lastBeatTime<-currentTime,true),false->false})})),FLAGS?:={init?:false},scene('inputCheck',fn(data)({next:next}:=data,fn onNotACPermissed()(bean:=createPlayer()),if next !=?{true->(fn checkForAC_Allowed?()if (!FirstInput?)|(!IS_IFRAME){true->(getFInput(),onNotACPermissed(),checkForAC_Allowed?()),_->next()},checkForAC_Allowed?())})),scene('initLoading',fn()(setBackground(BLACK),FONT_SIZE:=24,loader_text:=add([text('',{font:s('gwibble'),size:FONT_SIZE}),pos(),anchor(s('topleft'))]),fn AddText(text)(loader_text.text<-loader_text.text+s(text)<<'
'),AddText('Welcome to OKFunk!!!'),AddText(''),fn log(ii)AddText('[okbf] '<<ii),fn attemptLog(ii)log('Attempting to load: '<<ii),fn sucLog(ii)log('Got: '<<ii),attemptLog('gwibble'),gwibble:=loadFont(s('gwibble'),s('/fonts/gwibble/font.ttf')),AddText(keys(gwibble)),AddText(''),sucLog('gwibble'),attemptLog('bean'),beanSpr<-do('
    loadSpriteAtlas("sprites/game/characters/beanfriend.png", {
      bean: {
        x: 0,
        y: 0,
        width: 96 * 5,
        height: 76 * 5,
        sliceX: 5,
        sliceY: 5,
        anims: {
          none: { from: 0, to: 0, loop: true, },
          idle: { from: 0, to: 4, loop: true },
          left: { from: 5, to: 8, loop: false },
          down: { from: 9, to: 12, loop: false },
          up: { from: 13, to: 16, loop: false },
          right: { from: 17, to: 20, loop: false },
        },
      }
    })
  '),AddText(keys(beanSpr)),AddText(''),sucLog('bean'),attemptLog('ghosty'),ghostySpr<-do('
    loadSpriteAtlas("sprites/game/characters/markk.png", {
      markk: {
        x: 0,
        y: 0,
        width: 80 * 4,
        height: 70 * 5,
        sliceX: 4,
        sliceY: 5,
        anims: {
          none: { from: 0, to: 0, loop: true, },
          idle: { from: 0, to: 4, loop: true },
          left: { from: 5, to: 8, loop: false },
          down: { from: 9, to: 12, loop: false },
          up: { from: 13, to: 16, loop: false },
          right: { from: 17, to: 20, loop: false },
        },
      }
    })
  '),AddText(keys(ghostySpr)),AddText(''),sucLog('ghosty'),fn lspr(name,path)(id:='sprite:'<<name,attemptLog(id),returns:=OKloadSprite(name,path),AddText(keys(returns)),AddText(''),sucLog(id),returns),fn lsnd(name,path)(id:='sound:'<<name,attemptLog(id),returns:=loadSound(s(name),s(path)),AddText(keys(returns)),AddText(''),sucLog(id),returns),menu_logoSpr<-lspr('menu_logo','sprites/menu/menu.png'),loadBarSpr<-lspr('loadBar','sprites/loadBar.png'),loading_tempSpr<-lspr('loading_temp','sprites/menu/kblfront.png'),kaboomSpr<-lspr('kaboom','sprites/ka.png'),kaboom_bgSpr:=lspr('kaboom_bg','sprites/boom.png'),cowingSpr<-lspr('cowing','cowingWhite.png'),lsnd('freakyMenu','sounds/freakyMenu.ogg'),lsnd('confirmMenu','sounds/confirmMenu.ogg'),lsnd('cancelMenu','sounds/cancelMenu.ogg'),lsnd('scrollMenu','sounds/scrollMenu.ogg'),window.intialLoad<-{gwibble:gwibble,beanSpr:beanSpr,ghostySpr:ghostySpr,menu_logoSpr:menu_logoSpr,loadBarSpr:loadBarSpr,loading_tempSpr:loading_tempSpr,kaboomSpr:kaboomSpr,kaboom_bgSpr:kaboom_bgSpr},load(Promise.all([fetch('code/txt.txt').then(fn(res)res.text()).then(fn(res)introTexts<-string(res))])),go('inputCheck',{next:fn()go('intro')}))),scene('intro',fn()(setBackground(BLACK),firstTrack:=newCut(),txt:=do('
    add([
      text(
        "KaboomFunkin\\\'",
        {
          size: 42,
          width: width() * 0.75,
          font: "gwibble",
          align: "center"
        }
      ),
      pos(center()),
      anchor("center")
    ])
  '),cowingLogo:=add([sprite(s('cowing')),pos(center()),anchor(s('center')),scale(0.1)]),shakey(txt),shakey(cowingLogo),cutArr:=[[0,[txt,0]],[0,[cowingLogo,0]],[2,[txt,1]],[3.2,[txt,0]],[2,fn()(txt.text<-'Made by Spectcow
')],[0,[txt,1]],[3,fn()(txt.text<-txt.text+'He\'s so cool !')],[3.2,[txt,0]],[2,fn()(choice:=rng.choice(str.split(introTexts,'
')),txt.text<-'',std.each(str.split(choice,'--'),fn(ii,ic)(wait(1.2*ic,fn()txt.text<-txt.text+ii<<'
'))))],[0,[txt,1]],[4,[txt,0]],[2,fn()Transition(WHITE).fadeIn(2)],[3+2,fn()go('menuScreen')]],firstTrack.Cutscene(cutArr,fn(ii)if type(ii){:function->ii(),_->((ii.0).opacity<-std.default(ii.1,(ii.0).opacity))}))),scene('menuScreen',fn()(bpmh:=createBeatHandler(),menu_logo:=add([sprite(s('menu_logo')),pos(center()),anchor(s('center')),scale(0.5)]),kaboomBG:=add([sprite(s('kaboom_bg')),pos(menu_logo.pos.x+125,menu_logo.pos.y+75),anchor(s('center')),scale(0.5)]),kaboomText:=add([sprite(s('kaboom')),pos(kaboomBG.pos),anchor(s('center')),scale(0.5)]),text_:=add([text(s('Press Enter to Start!'),{size:28,font:gwibble,align:s('center')}),pos(menu_logo.pos.x,menu_logo.pos.y+200),anchor(s('center'))]),scl:=0.5,udc:=onUpdate(fn()(if bpmh.activateBeat(100){true->(menu_logo.use(scale(scl<-0.4))),false->(scl<-scl+0.001,menu_logo.use(scale(scl)))})))),scene('game',fn()(if !FLAGS?.init?{true->(FLAGS?.init?<-true,go('initLoading')),false->go('intro')})),{CHROMEOS:CHROMEOS,FLAGS?:FLAGS?,FirstInput?:FirstInput?,GLOBAL_LOADED_FILES:GLOBAL_LOADED_FILES,IS_IFRAME:IS_IFRAME,PixelTransition:PixelTransition,Transition:Transition,_b:_b,beanSpr:beanSpr,cowingSpr:cowingSpr,createBeatHandler:createBeatHandler,createGhosty:createGhosty,createPlayer:createPlayer,fi_:fi_,getFInput:getFInput,ghostySpr:ghostySpr,gwibble:gwibble,introTexts:introTexts,json:json,kaboomSpr:kaboomSpr,kaboom_bgSpr:kaboom_bgSpr,loadBarSpr:loadBarSpr,loading_tempSpr:loading_tempSpr,menuMusic:menuMusic,menu_logoSpr:menu_logoSpr,newCut:newCut,playMenuMusic:playMenuMusic,rng:rng,shakey:shakey,std:std,str:str})),__oak_modularize('scenes/main.oak',fn()(init:=__oak_module_import('scenes/init/main.oak'),bseq:=__oak_module_import('scenes/oc_bootseq/main.oak'),go('boot__'),{bseq:bseq,init:init})),__oak_modularize('scenes/notes/main.oak',fn()(std:=__oak_module_import('std'),ac:=audioCtx,dest:=ac.destination,fn getFreq(obj_)({note:note,octave:octave}:=obj_,fn Err(e){message:'Missing value.',error:e,type::error},if true{note=?->Err(),octave=?->Err()},NOTES:=['C','C#','D','D#','E','E#','F','F#','G','G#','A','A#','B','B#'],440*pow(pow(2,1/len(NOTES)),(octave*12)+std.find(NOTES,fn(ii)(ii=note)))),fn createGain()({gain:gain:=ac.createGain(),begin:gain.connect(dest),createTriangle:fn createTriangle()(_osc:=ac.createOscillator(),_osc.type:='triangle',_osc.frequency.value<-440,_osc.connect(gain),{set:fn set(a)_osc.frequency.value<-a,osc:_osc,start:_osc.start}),createSquare:fn createSquare()(_osc:=ac.createOscillator(),_osc.type:='square',_osc.frequency.value<-440,_osc.connect(gain),{set:fn set(a)_osc.frequency.value<-a,osc:_osc,start:_osc.start}),createWhiteNoise:fn createWhiteNoise()(_buffer:=ac.createBuffer(1,ac.sampleRate*2,ac.sampleRate),_data:=_buffer.getChannelData(0),std.each(_data,fn(ii,i)(_data.(i)<-rand()*2-1)),_source:=ac.createBufferSource(),_source.buffer<-_buffer,_source.loop<-true,_source.connect(gain),{start:_source.start,src:_source})}),{ac:ac,createGain:createGain,dest:dest,getFreq:getFreq,std:std})),__oak_modularize('scenes/oc_bootseq/main.oak',fn()({Transition:Transition}:=__oak_module_import('scenes/blocks/Transition.oak'),notes:=__oak_module_import('scenes/notes/main.oak'),std:=__oak_module_import('std'),{newCut:newCut}:=__oak_module_import('scenes/ware/cutscene.oak'),{shakey:shakey}:=__oak_module_import('scenes/blocks/shakey.oak'),oK_:=OKloadSprite('oakcart','/sprites/oakcart.png'),scene('boot__',fn()(setBackground(WHITE),logo_:=add([sprite(oK_,{width:200}),pos(center()),anchor(s('center')),opacity(0)]),fn setOpac(opac)logo_.opacity<-opac,cutsc:=newCut(),cutsc_scale:=newCut(),cutsc_scale.sh.step(2),cutsc_scale.Cutscene([[0.05,0.7],[0.05,0.9],[0.05,1]],fn(i)logo_.scale<-i),cutsc.sh.step(2),cutsc.Cutscene([[0.1,0.2],[0.1,0.7],[0.1,1],[3,0.6],[0.5,0.3],[0.5,0.15],[0.5,0],[0.3,fn()Transition(BLACK).fadeIn(2)],[2+2,fn()go('init')]],setOpac))),{Transition:Transition,newCut:newCut,notes:notes,oK_:oK_,shakey:shakey,std:std})),__oak_modularize('scenes/ware/cutscene.oak',fn()(std:=__oak_module_import('std'),stp:=__oak_module_import('web/step.oak'),_sh:=stp.createStepper(),_sw:=_sh.sw,fn _MAKE_Cutscene(sh,sw)fn Cutscene(val,passthru)std.each(val,fn(i)(if type(i.1){:function->sw(i.0,i.1),_->sw(i.0,fn()passthru(i.1,[sh,sw]))})),Cutscene:=_MAKE_Cutscene(_sh,_sw),fn newCut()({sh:sh:=stp.createStepper(),sw:sw:=sh.sw,Cutscene:_MAKE_Cutscene(sh,sw)}),{Cutscene:Cutscene,_MAKE_Cutscene:_MAKE_Cutscene,_sh:_sh,_sw:_sw,newCut:newCut,std:std,stp:stp})),__oak_modularize('web/entry.oak',fn()(std:=__oak_module_import('std'),str:=__oak_module_import('str'),json:=__oak_module_import('json'),fmt:=__oak_module_import('fmt'),path:=__oak_module_import('path'),oaka:=__oak_module_import('web/oaka.oak'),kaboom({width:600,height:500}),vv:=visualViewport,gameWidth:=canvas.width,gameHeight:=canvas.height,fn worldify()({x:(vv.width/2)-(gameWidth/2),y:(vv.height/2)-(gameHeight/2)}),canvasPos:=?,canvasBorder:=?,document.body.style.backgroundColor:='#000',fn updateCanvas()(canvasPos<-worldify(),canvas.style.display<-'flex',canvas.style.position<-'absolute',canvas.style.left<-s(canvasPos.x)+'px',canvas.style.top<-s(canvasPos.y)+'px'),updateCanvas(),scenes:=__oak_module_import('scenes/main.oak'),{canvasBorder:canvasBorder,canvasPos:canvasPos,fmt:fmt,gameHeight:gameHeight,gameWidth:gameWidth,json:json,oaka:oaka,path:path,scenes:scenes,std:std,str:str,updateCanvas:updateCanvas,vv:vv,worldify:worldify})),__oak_modularize('web/oaka.oak',fn()(std:=__oak_module_import('std'),str:=__oak_module_import('str'),json:=__oak_module_import('json'),fmt:=__oak_module_import('fmt'),path:=__oak_module_import('path'),w:=window,fn windowBind(fns...)(std.each(fns,fn(it)(window.(it.name)<-it,window.('OK'+it.name)<-it,globalThis.(it.name)<-it,globalThis.('OK'+it.name)<-it))),windowBind(fn s(pl)string(pl).toString(),fn kb(func,pls)(strings:=std.map(pls,fn(it,i?)s(it)),func(strings...)),fn do(code)eval(s(code)),fn assign(name,code)w.(string(name))<-do(code),fn abstr?(thing,op)if type(thing){:string->op(thing)},fn windowFullscreen?()(window.innerHeight=screen.height),fn clense(args,pos)abstr?(args.(pos),fn(it)it<-s(it)),fn sprite(args...)(clense(args,0),w.sprite(args...)),fn loadSprite(args...)(kb(w.loadSprite,args)),fn onKeyDown(args...)(clense(args,0),w.onKeyDown(args...))),{abstr?:abstr?,assign:assign,clense:clense,do:do,fmt:fmt,json:json,kb:kb,loadSprite:loadSprite,onKeyDown:onKeyDown,path:path,s:s,sprite:sprite,std:std,str:str,w:w,windowBind:windowBind,windowFullscreen?:windowFullscreen?})),__oak_modularize('web/self.oak',fn()(fn createSelf()(th_:={},{reco:fn reco(key,val)(th_.(key)<-val),set:fn(key,val)(reco(key,val),val),get:fn(key)th_.(key),this:fn()th_}),{createSelf:createSelf})),__oak_modularize('web/step.oak',fn()(self:=__oak_module_import('web/self.oak'),fn createStepper()(step_self:=self.createSelf(),step_self.set('stepNum',0),{get:fn get()step_self.get('stepNum'),set:fn set(am)step_self.set('stepNum',am),step:fn step(am)set(get()+am),reset:fn reset()set(0),sw:fn sw(am,cb)wait(step(am),fn()cb(get()))}),mainThread:=createStepper(),{createStepper:createStepper,mainThread:mainThread,self:self})),__Oak_Import_Aliases<-{},__oak_module_import('web/entry.oak'))